	// 27-09-2017
::
IIS:
	É um servidor web da Microsoft para seus S.O.
	A função do IIS no Windows server é oferecer uma plataforma para a 
	hospedagem de sites, serviços e aplicações, sendo capaz de integrar 
	tecnologias: ASP.NET, FTP...
	
::
<div class="container body-content">
        @RenderBody() <!--ONDE AS VIEWS VÃO SER RENDERIZADAS-->
		
::
http://localhost:56875/Home/About
	./Home - refere Controller
	./About - refere Action
	.A aplicação vai a Home_Controller á procura de About_action

::
	//28-09-2017:10.00
::
ROUTES:
	MVC applications use the ASP.NET routing system , which decides
	how URLs map to controllers and actions. A route is a rule that is used 
	to decide how a request is handled.
	
::
PARTY_INVITES (HELLOWORLDCONTROLLER)---
	.RENDERING WEB PAGES:
		The output from the previous example wasn’t HTML - To produce an
		HTML response to a browser request, I need a VIEW , which tells MVC
		how to generate a response for a request from a browser.
::
ADICIONAR NOVA VIEW:
	."Na pasta Views/Home": Add new Item > MVC view page
	."Na pasta Views/HelloWorld": Add new view > Empty
	

::
ADDING DYNAMIC OUTPUT (pag.23):
	.A ideia em MVC é o controlador passar dados para a View:
	The whole point of a web application platform is to construct and display 
	dynamic output. In MVC, it is the controller’s job to construct some data 
	and pass it to the view, which is responsible for rendering it to HTML.
	
::
C# - PROPERTIES:
	Properties combine aspects of both fields and methods. A property is 
	one or two code blocks, representing a GET accessor and/or a 
	SET accessor. The code block for the get accessor is executed when 
	the property is read; the code block for the set accessor is executed 
	when the property is assigned a new value. 
	
	EX:
	class Person {
		private string myName ="N/A";
		
		 public string Name
		{
			get 
			{
			   return myName; 
			}
			set 
			{
			   myName = value; 
			}
		}
	}
	public static void Main()
    {
        // Create a new Person object:
        Person person = new Person();

        // Print out the name and the age associated with the person:
        Console.WriteLine("Person details - {0}", person);
		/****** 
			OUTPUT: Person details -  N/A 
		*******/

        // Set some values on the person object:
        person.Name = "Joe";
		Console.WriteLine("Person details - {0}", person);
		/****** 
			OUTPUT: Person details -  Joe 
		*******/
	}
::
DESIGNING A DATA MODEL
	.The domain model is the representation of the real-world objects
	.The model contains the C# objects
	.The views and controllers expose the domain to the clients
	
::
// 04/10/2017 : 9.00 - 11.00
RECEIVING FORM DATA (pag.31)
	.To receive and process submitted form data:
		.A method that responds to HTTP GET requests : A GET request is what a browser
		 issues normally each time someone clicks a link. This version of the action will be
		 responsible for displaying the initial blank form when someone first visits /Home/
		 RsvpForm .
	.A method that responds to HTTP POST requests : By default, forms rendered using
	 Html.BeginForm() are submitted by the browser as a POST request. This version of
	 the action will be responsible for receiving submitted data and deciding what to do
	 with it.
	 
::
// 09/10/2017 : 14.00 - 17.00
GITHUB:
	.Fiz tutorial abaixo referenciado
#ref. blog: 
https://haylson.wordpress.com/2016/06/14/como-usar-o-git-e-o-github/

::
// 10/10/2017 : 11.30 - 14.30
Revi o que foi feito e continuei o projecto do Livro

LIVRO // VALIDAÇÃO (pag.39 - 41):
	.In an MVC application, you will typically apply validation to
	the domain model rather than in the user interface. 
	This means that you define validation in one place, but it takes effect
	anywhere in the application that the model class is used. MVC supports 
	declarative validation rules defined with attributes from 
	System.ComponentModel.DataAnnotations namespace.

::
// 11/10/2017: 9.30 - 10.30	
GITHUB:
	.iniciei tutorial GitHub Udacity (lição 2):
		.De 1-introdução até 9-
	
::
// 12/10/2017: 10.00 - 11.0
Revi projecto aula 11/10/2017 + expressoes regulares 
	
::
// 25/10/2017: 9.30 - 10.30	
Continuei o projecto do Livro

LIVRO // STYLING THE WELCOME VIEW (pag.45 - ):

::
// 26/10/2017: 15.30 - 16.00
Revi e completei o que não consegui fazer na aula (quarta - 14.00-15.30)
a partir do projecto do prof. Noel. 



	